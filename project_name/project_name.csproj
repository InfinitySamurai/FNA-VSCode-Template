<?xml version="1.0"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net471</TargetFramework>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <AssemblyName>project_name</AssemblyName>
        <MonoGamePlatform>DesktopGL</MonoGamePlatform>
        <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    </PropertyGroup>
    
    <!-- Reference FNA, Nez and ImGui projects -->
    <ItemGroup>
        <ProjectReference Include="../FNA/FNA.csproj"/>
        <ProjectReference Include="../Nez.FNA/Nez.FNA/Nez.FNA.csproj"/>
    </ItemGroup>
    
    <!-- Include the Content directory (except for .fx files, since we use .fxb at runtime) -->
    <ItemGroup>
        <Content Include="Content/**/*.*" Exclude="**/*.fx; Content/Content-Goes-Here.txt">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    
    <!-- Include the CompiledContent bin (MGCB output). Copy it to the Content folder in the build. -->
    <ItemGroup>
        <Content Include="CompiledContent/bin/DesktopGL/**/*.xnb">
            <Link>Content/%(RecursiveDir)%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <!-- cleanup so VS looks clean -->
        <None Remove="CompiledContent\obj\**"/>
        <None Remove="CompiledContent\bin\**"/>
        <None Remove="CompiledContent\.*"/>
    </ItemGroup>
    
    <!-- MonoGames content pipeline needs this defined -->
    <ItemGroup>
        <MonoGameContentReference Include="CompiledContent\Content.mgcb"/>
    </ItemGroup>
    
    <Import Project="../MonoGameContent.targets"/>
    
    
    <PropertyGroup>
        <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
        <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
    </PropertyGroup>
    
    <!-- Copy fnalib directories to output -->
    <ItemGroup>
        <Content Include="..\fnalibs\x86\**\*.*" Condition="'$(OS)' == 'Windows_NT' AND '$(Platform)' != 'x64'">
            <Link>x86\%(RecursiveDir)%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="..\fnalibs\x64\**\*.*" Condition="'$(OS)' == 'Windows_NT' AND '$(Platform)' != 'x86'">
            <Link>x64\%(RecursiveDir)%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="..\fnalibs\osx\**\*.*" Condition="'$(OS)' != 'Windows_NT' AND $(IsOSX) == 'true'">
            <Link>osx\%(RecursiveDir)%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="..\fnalibs\lib\**\*.*" Condition="'$(OS)' != 'Windows_NT' AND $(IsLinux) == 'true'">
            <Link>lib\%(RecursiveDir)%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="..\fnalibs\lib64\**\*.*" Condition="'$(OS)' != 'Windows_NT' AND $(IsLinux) == 'true'">
            <Link>lib64\%(RecursiveDir)%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    
    <!-- Copy ImGui native code to output -->
    <PropertyGroup>
        <ImGuiRuntimes>$(NuGetPackageRoot)\imgui.net\**\runtimes\</ImGuiRuntimes>
    </PropertyGroup>

    <ItemGroup>
        <Content Include="$(ImGuiRuntimes)win-x86\native\cimgui.dll" Condition="'$(OS)' == 'Windows_NT' AND '$(Platform)' != 'x64'">
            <Link>%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(ImGuiRuntimes)win-x64\native\cimgui.dll" Condition="'$(OS)' == 'Windows_NT' AND '$(Platform)' != 'x86'">
            <Link>%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(ImGuiRuntimes)osx-x64\native\cimgui.dylib" Condition="'$(OS)' != 'Windows_NT' AND $(IsOSX) == 'true'">
            <Link>libcimgui.dylib</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include=".$(ImGuiRuntimes)linux-x64\native\cimgui.so" Condition="'$(OS)' != 'Windows_NT' AND $(IsLinux) == 'true'">
            <Link>%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    
    <ItemGroup>
        <PackageReference Include="ImGui.NET" Version="1.67.0" />
    </ItemGroup>
</Project>
